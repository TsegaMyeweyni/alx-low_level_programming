#include "main.h"

/**
 * _isupper - checks whether a character is uppercase.
 *@c: the integer to be supplied by user.
 * Return: 0 or 1.
 */

int _isupper(int c)
{
if (c >= 65 && c <= 90)
{
return (1);
}
else
{
return (0);
}
}

0-memset.c/     0           0     0     644     365       `
#include "main.h"
/**
 * _memset - check the code for Holberton School students.
 * @s: parameter for the array
 * @b: parameter for the values in the array
 * @n: parameter for the number of times to print the new values
 * Return: Always 0.
 */
char *_memset(char *s, char b, unsigned int n)
{
unsigned int a = 0;

while (a < n)
{
s[a] = b;
a++;
}

return (s);
}

0-strcat.c/     0           0     0     644     324       `
#include "main.h"

/**
 * _strcat -  function that concatenates two strings.
 * @src: parameter to a src
 * @dest: parameter to append
 * Return: Always 0.
 */

char *_strcat(char *dest, char *src)
{
int a = 0;
int b = 0;

while (dest[a] != '\0')
a++;
while (src[b] != '\0')
{
dest[a] = src[b];
b++;
a++;
}
return (dest);
}
100-atoi.c/     0           0     0     644     149       `
#include "main.h"
/**
 * _atoi-func to convert str to int
 * @s: pointer to be supplied
 * Return: Always 0
 */

int _atoi(char *s)
{
return (0);

}

1-isdigit.c/    0           0     0     644     225       `
#include "main.h"

/**
 *_isdigit - check if c is a digit between 0 and 9.
 *@c: the integer to be supplied by user.
 *Return: 0 or 1.
 */

int _isdigit(int c)
{
if (c >= 48 && c <= 57)
{
return (1);
}
else
{
return (0);
}
}

1-memcpy.c/     0           0     0     644     362       `
#include "main.h"
/**
 * _memcpy - copies n bytes form the memory area src
 * to memory area dest
 * @src: source code to copy
 * @dest: paramater for destination to  copy to
 * @n: how many bytes to copy
 * Return: dest;
 */

char *_memcpy(char *dest, char *src, unsigned int n)
{
unsigned int i;

for (i = 0; i < n; i++)
{
dest[i] = src[i];
}
return (dest);
}
1-strncat.c/    0           0     0     644     427       `
#include "main.h"
/**
 * _strncat - concatenates two strings.
 * @dest: destination.
 * @src: source.
 * @n: amount of bytes used from src.
 * Return: the pointer to dest.
 */
char *_strncat(char *dest, char *src, int n)
{
int count = 0, count2 = 0;

while (*(dest + count) != '\0')
{
count++;
}

while (count2 < n)
{
*(dest + count) = *(src + count2);
if (*(src + count2) == '\0')
break;
count++;
count2++;
}
return (dest);
}

2-strchr.c/     0           0     0     644     305       `
#include "main.h"
/**
 * _strchr - returns a pointer to the first occurence of the
 * character c in the string s
 * @c: parameter for c to return
 * @s: string to search character
 * Return: pointer to first occurence of character c or null if not found
 */
char *_strchr(char *s, char c)
{
return(s);
}

2-strlen.c/     0           0     0     644     213       `
#include "main.h"

/**
 * _strlen - prints the length of char pointer.
 *@s: pointer to character array.
 * Return: Always 0.
 */

int _strlen(char *s)
{
int i = 0;

while (*s != '\0')
{
i++;
s++;
}
return (i);
}

2-strncpy.c/    0           0     0     644     331       `
#include "main.h"
/**
 * _strncpy - copies a string
 * @dest: destination.
 * @src: source.
 * @n: amount of bytes from src.
 * Return: the pointer to dest.
 */

char *_strncpy(char *dest, char *src, int n)
{
int i;

for (i = 0; i < n && src[i] != '\0'; i++)
dest[i] = src[i];
for ( ; i < n; i++)
dest[i] = '\0';

return (dest);
}

3-islower.c/    0           0     0     644     249       `
#include "main.h"
/**
 * _islower - checks if a character is lowercase
 * @c:  is the int that will use for the argument of the function
 * Return: Always 0.
 */
int _islower(int c)
{
if (c >= 'a' && c <= 'z')
{
return (1);
}
else
{
return (0);
}
}

3-puts.c/       0           0     0     644     210       `
#include "main.h"

/**
 * _puts - prints a string of characters
 *@str: pointer to a string
 * Return: Always 0.
 */

void _puts(char *str)
{;

while (*str != '\0')
{
_putchar(*str);
str++;
}
_putchar('\n');
}
3-strcmp.c/     0           0     0     644     348       `
#include "main.h"
/**
 * _strcmp - compares two strings
 * @s1: first string.
 * @s2: second string.
 * Return: 0 if s1 and s2 are equals,
 * another number if not.
 */

int _strcmp(char *s1, char *s2)
{
int i = 0, op = 0;

while (op == 0)
{
if ((*(s1 + i) == '\0') && (*(s2 + i) == '\0'))
break;
op = *(s1 + i) - *(s2 + i);
i++;
}

return (op);
}
3-strspn.c/     0           0     0     644     436       `
#include "main.h"
#include <stdio.h>

/**
 * _strspn - returns number of bytes in the initial sengment s
 * @s: for the count action
 * @accept: parameter for char
 * Return: number of bytes;
 */

unsigned int _strspn(char *s, char *accept)
{
unsigned int num;
int i, j, t;

i = 0;
while (s[i] != '\0')
{
t = 0;
for (j = 0; accept[j] != '\0'; j++)
{
if (s[i] == accept[j])
t = 1;
}
j = 0;
if (t == 0)
break;
num++;
i++;
}
return (i);
}
4-isalpha.c/    0           0     0     644     292       `
#include "main.h"
/**
 * _isalpha - function to check if c is a letter, lowercase or uppercase
 * @c: is the int that will use for the argument of the function
 * Return: 0
 */
int _isalpha(int c)
{
if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
{
return (1);
}
else
{
return (0);
}
}
4-strpbrk.c/    0           0     0     644     433       `
#include "main.h"

/**
 * _strpbrk - locates the first occurrence in the string s of any
 * of the bytes in the string accept
 * @s: for the char
 * @accept: paramter for accept
 * Return: pointer to the byte s
 */

char *_strpbrk(char *s, char *accept)
{
int i, t, j;

i = 0;
while (s[i] != '\0')
{
t = 0;
for (j = 0; accept[j] != '\0'; j++)
{
if (s[i] == accept[j])
t = 1;
}
j = 0;
if (t == 1)
return (s + i);
i++;
}
return (0);
}

5-strstr.c/     0           0     0     644     328       `
#include "main.h"
#include <stdio.h>
/**
 * _strstr - finds the first occurence of the substring needle
 * in the string haystack
 * @haystack: paramter for haystack
 * @needle: paramter for needle
 * Return: pointer to the beginning of the located substring
 */
char *_strstr(char *haystack, char *needle)
{
return (needle);
}
6-abs.c/        0           0     0     644     269       `
#include "main.h"
#include <stdio.h>
/**
 * _abs - function that computes the absolute value of an integer
 * @c:  is the int that will use for the argument of the function
 * Return: 0
 */
int _abs(int c)
{
if (c > 0 || c == 0)
{
return (c);
}
else
return (c * -1);
}

9-strcpy.c/     0           0     0     644     417       `
#include "main.h"
#include <stdio.h>
/**
 * _strcpy - copies the string pointed to by src,
 * including the terminating null byte, to the
 * buffer pointed to by dest.
 * @dest: destination.
 * @src: source.
 * Return: the pointer to dest.
 */
char *_strcpy(char *dest, char *src)
{
int count = 0;

while (count >= 0)
{
*(dest + count) = *(src + count);
if (*(src + count) == '\0')
break;
count++;
}
return (dest);
}

_putchar.c/     0           0     0     644     247       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
{
	return (write(1, &c, 1));
}